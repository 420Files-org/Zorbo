@inject IJSRuntime JSRuntime
@inject ChatClient ChatClient 
@if (ShowConsent) {
    <div class="d-flex-row nav navbar navbar-expand cookies fade show" role="alert">
        <p class="m-auto">By clicking "Accept" or continuing to use this site you acknowledge our use of cookies.</p>
        <ul class="nav btns">
            <li>
                <button type="button" class="btn btn-primary" data-dismiss="alert" aria-label="Close" @onclick="AcceptMessage">
                    <span aria-hidden="true">Accept</span>
                </button>
            </li>
            <li>
                <NavLink class="btn accept-policy" href="cookies">
                    <span aria-hidden="true">Settings</span>
                </NavLink>
            </li>
        </ul>
    </div>
}
@code {

    bool ShowConsent { get; set; } = true;

    protected override void OnInitialized()
    {
        var jip = (IJSInProcessRuntime)JSRuntime;

        ShowConsent = !("yes" == jip.Invoke<string>("ZorboApp.readCookie", "ZorboApp.Consent"));
        ChatClient.Username = jip.Invoke<string>("ZorboApp.readCookie", "ZorboApp.Username");

        if (string.IsNullOrEmpty(ChatClient.Username)) ChatClient.Username = "Zorbo User";
    }

    private async Task AcceptMessage()
    {
        ShowConsent = false;
        await JSRuntime.InvokeVoidAsync("ZorboApp.writeCookie", "ZorboApp.Consent", "yes", 7);
    }
}
